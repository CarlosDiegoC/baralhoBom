// <auto-generated />
using System;
using Deck_of_Cards.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Deck_of_Cards.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221029010551_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Card", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Suit")
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.HasIndex("PlayerId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Deck", b =>
                {
                    b.Property<string>("Deck_id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Remaining")
                        .HasColumnType("int");

                    b.Property<bool>("Shuffled")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Deck_id");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DeckId")
                        .HasColumnType("longtext");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Card", b =>
                {
                    b.HasOne("Deck_of_Cards.Domain.Entities.Player", null)
                        .WithMany("Cards")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Game", b =>
                {
                    b.HasOne("Deck_of_Cards.Domain.Entities.Player", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Player", b =>
                {
                    b.HasOne("Deck_of_Cards.Domain.Entities.Game", null)
                        .WithMany("Players")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Game", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Deck_of_Cards.Domain.Entities.Player", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
